version: 2
jobs:
  build:
    working_directory: ~/cicognara-rails
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    docker:
      - image: circleci/ruby:2.4-node-browsers
        environment:
          RAILS_ENV: test
          CICOGNARA_DB_HOST: localhost
          CICOGNARA_DB_USERNAME: cicognara
      - image: postgres:10.3-alpine
        environment:
          POSTGRES_USER: cicognara
          POSTGRES_DB: cicognara_test
          POSTGRES_PASSWORD: ""
      - image: solr:7.7-alpine
        command: bin/solr -cloud -noprompt -f -p 8888
    steps: &test_steps
      - checkout
      - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
      # use bundler 2
      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler
      # Dependencies
      # Restore the dependency cache
      - type: cache-restore
        name: Restore bundle cache
        key: cicognara-rails-{{ checksum "Gemfile.lock" }}
      - run: 'bundle check --path=vendor/bundle || bundle install --path=vendor/bundle
          --jobs=4 --retry=3 '
      - run:
          name: Load config into solr
          command: |
            cd solr/config
            zip -1 -r solr_config.zip ./*
            curl -H "Content-type:application/octet-stream" --data-binary @solr_config.zip "http://localhost:8888/solr/admin/configs?action=UPLOAD&name=cicognara"
            curl -H 'Content-type: application/json' http://localhost:8888/api/collections/ -d '{create: {name: cicognara, config: cicognara, numShards: 1}}'

      # Cache Dependencies
      - type: cache-save
        name: Store bundle cache
        key: cicognara-rails-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle
      # project database settings
      - run: bundle exec rails db:create
      - run: bundle exec rails db:migrate
      - run: bundle exec rails db:migrate RAILS_ENV=test
      # Test
      - run: bundle exec rake rubocop
      - run: bundle exec rspec
      # Save test results
      - store_test_results:
          path: /tmp/circleci-test-results
      # Save artifacts
      - store_artifacts:
          path: /tmp/circleci-artifacts
      - store_artifacts:
          path: tmp/capybara
      - store_artifacts:
          path: /tmp/circleci-test-results
  test_2_6:
    # Primary command image where all commands run
    docker:
      - image: circleci/ruby:2.6-node-browsers
        environment:
          PGHOST: 127.0.0.1
          PGUSER: root
          RAILS_ENV: test
      # Service container image available at 'host: localhost'
      - image: postgres:10
        environment:
          POSTGRES_DB: lae_blacklight_test
          POSTGRES_USER: root
          POSTGRES_HOST_AUTH_METHOD: trust
      - image: solr:7.7-alpine
        command: bin/solr -cloud -noprompt -f -p 8888
    working_directory: ~/lae-blacklight
    steps: *test_steps
workflows:
  version: 2
  build_accept_deploy:
    jobs:
      - build
      - test_2_6
